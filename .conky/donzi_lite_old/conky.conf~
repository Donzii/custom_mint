--[[
Conky, a system monitor, based on torsmo

Any original torsmo code is licensed under the BSD license

All code written since the fork of torsmo is licensed under the GPL

Please see COPYING for details

Copyright (c) 2004, Hannu Saransaari and Lauri Hakkarainen
Copyright (c) 2005-2012 Brenden Matthews, Philip Kovacs, et. al. (see AUTHORS)
All rights reserved.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

https://raw.githubusercontent.com/mpersano/conky-circles-dark-blue/master/conky.conf

Info:
https://conky.cc
https://github.com/brndnmtthws/conky/wiki


https://github.com/brndnmtthws/conky/wiki/Configs
https://wiki.ubuntuusers.de/Conky
https://conky.sourceforge.net/variables
]]




conky.config = {

-- Update interval in seconds
    update_interval = 0.75,

-- Use double buffering (reduces flicker, may not work for everyone)
    double_buffer = true,

-- Subtract file system buffers from used memory?
    no_buffers = true,
    out_to_console = false,
    out_to_stderr = false,
    extra_newline = false,

-- Text alignment, other possible values are commented
--    alignment top_left
	alignment = 'bottom_right',
--    alignment bottom_left
--    alignment bottom_right

-- Gap between borders of screen and text
    gap_x = 10,
    gap_y = 50,

-- Minimum size of text area
    minimum_width = 100,
    minimum_height = 0,
--    maximum_width = 100,
--    min_port_monitors 100

-- Create own window instead of using desktop (required in nautilus)
    own_window = true,
    own_window_class = 'Conky',
    own_window_argb_visual = true,
    own_window_argb_value = 0,

--own_window_type override
    own_window_transparent = true,
    own_window_hints = 'undecorated,below,sticky,skip_taskbar,skip_pager',

-- own_window_type = 'desktop', override, panel, normal
    own_window_type = 'normal',

-- Draw shades, outlines, borders around text?
    draw_borders = false,
    draw_graph_borders = false,
    draw_outline = false,
    draw_shades = true,

-- border width
	border_width = 1,

-- Stippled borders?
	stippled_borders = 0,

-- border margins
--border_margin 9


-- set to yes if you want conky to be forked in the background
    background = false,
    cpu_avg_samples = 2,

-- Default colors and also border colors, grey90 == #e5e5e5 DarkGrey
    default_color = 'grey90',
    default_outline_color = 'white',
    default_shade_color = 'black',

-- Font-Colors
    color0 = '34cdff',
    color1 = 'DarkGrey',


-- set to yes if you want all text to be in uppercase
    uppercase = false,

-- Xft font when Xft is enabled
    use_xft = true,
    font = 'DejaVu Sans Mono:size=8',
--xftfont Andale Mono-9
--xftfont Clean-8
--xftfont cubicfive10:pixelsize=8
--xftfont squaredance10:pixelsize=14
--xftfont swf!t_v02:pixelsize=10

-- Text alpha when using Xft
    xftalpha = 0.5,

-- wlan, lan
--  net_avg_samples = 2,







-- maintain spacing between certain elements
    use_spacer = 'right',

    show_graph_scale = false,
    show_graph_range = false,



    lua_draw_hook_pre = 'conky_main'
--mail_spool $MAIL
}
-- stuff after 'TEXT' will be formatted on screen

conky.text = [[
######	cpu
${font Michroma:size=8}${color0}${goto 75}${voffset 0}CPU
${font Play:normal:size=6}${color1}${goto 10}${exec grep -m1 "model name" /proc/cpuinfo | awk '{print $4" "$5" "$6" "$7}'}
${font Play:normal:size=6}${color1}${goto 10}Ghz	Temp
${font Play:normal:size=6}${color1}${goto 10}${freq_g cpu0}	${exec sensors | grep 'Tctl' | cut -c16-22}
${font Play:normal:size=6}${color1}${goto 10}${voffset 5}Load	Power
${font Play:normal:size=6}${color1}${goto 10}${cpu cpu0}%	${exec sensors | grep 'SVI2_P_Core' | cut -c15-22}
######	ram
${font Michroma:size=8}${color0}${goto 75}${voffset 15}RAM
${font Play:normal:size=6}${goto 10}${voffset 0}${color1}Used		All
${font Play:normal:size=6}${goto 10}${color1}${color1}${mem} / ${color1}${memmax}
${font Play:normal:size=6}${goto 10}${voffset 5}${color1}SWAP
${font Play:normal:size=6}${goto 10}${color1}${color1}${swap} / ${color1}${swapmax}
######	l端fter/wak端
${font Michroma:size=8}${color0}${goto 75}${voffset 15}RPM
#${font Play:normal:size=6}${color1}${goto 10}Radiator   Exhaust
${font Play:normal:size=6}${color1}${goto 10}L端fter
#${font Play:normal:size=6}${color1}${goto 10}${freq_g cpu0}     ${exec sensors | grep 'fan2' | cut -c24-31}
${font Play:normal:size=6}${color1}${goto 10}${exec sensors | grep 'fan2' | cut -c24-31}
#${font Play:normal:size=6}${color1}${goto 10}Wak端       Pumpe
#${font Play:normal:size=6}${color1}${goto 10}${freq_g cpu0}
######	grafikkarte
######  hdd
${font Michroma:size=8}${color0}${goto 75}${voffset 15}SSD
${font Play:normal:size=6}${color1}${goto 10}home ${fs_used_perc /home}% ${fs_used /home}
${font Play:normal:size=6}${color1}${goto 10}home Max   ${fs_size /home}
#${font}${color #43e120}home   :${color orange}  ${fs_used /home} /   ${fs_size /home} ${fs_used_perc /home}%
]]
